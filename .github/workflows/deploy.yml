name: Deploy to GitHub Pages

on:
  push:
    branches:
      - main  # Set your default branch here if it's not main
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: write
  pages: write
  id-token: write

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          
      - name: Install dependencies for static site generation
        run: |
          python -m pip install --upgrade pip
          # Only install packages needed for asset optimization
          pip install pillow==10.0.0 beautifulsoup4==4.12.2 csscompressor==0.9.5 jsmin==3.0.1 brotli==1.1.0 python-dotenv==1.0.1
        
      - name: Create dist directory
        run: mkdir -p dist
        
      - name: Copy static files to dist
        run: |
          # Copy all HTML files
          cp *.html dist/ || true
          # Create subdirectories
          mkdir -p dist/css dist/js dist/images
          # Copy assets with proper directory structure
          cp -r css/* dist/css/ || true
          cp -r js/* dist/js/ || true
          cp -r images/* dist/images/ || true
          # Copy other static assets
          cp robots.txt sitemap.xml dist/ || true
          if [ -f "_headers" ]; then cp _headers dist/ || true; fi
          if [ -f "favicon.ico" ]; then cp favicon.ico dist/ || true; fi
          
      - name: Try running optimization scripts
        run: |
          # Run with error handling
          python optimize_assets.py --clean || echo "Asset optimization failed, continuing with deployment"
          python convert_to_webp.py --clean || echo "WebP conversion failed, continuing with deployment"
        continue-on-error: true
          
      - name: Setup Node.js (for additional optimization tools)
        uses: actions/setup-node@v3
        with:
          node-version: '16'
          
      - name: Create CNAME file
        run: |
          # Your custom domain - update with your actual domain from Hostinger
          echo "aiunplugged.com" > dist/CNAME
          
      - name: Deploy to GitHub Pages
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          folder: dist
          branch: gh-pages
          clean: true
          token: ${{ secrets.GITHUB_TOKEN }} 