let particleScene,particleCamera,particleRenderer;let particleSystem,particleAnimationId;function initParticleSystem(){let container=document.getElementById('particle-container');if(!container){container=document.createElement('div');container.id='particle-container';container.style.position='absolute';container.style.top='0';container.style.left='0';container.style.width='100%';container.style.height='100%';container.style.zIndex='0';container.style.pointerEvents='none';const guaranteeSection=document.querySelector('#roi-guarantee');if(guaranteeSection){guaranteeSection.style.position='relative';guaranteeSection.style.overflow='hidden';guaranteeSection.prepend(container);}else{return;}}
particleScene=new THREE.Scene();particleCamera=new THREE.PerspectiveCamera(75,container.clientWidth/container.clientHeight,0.1,1000);particleCamera.position.z=30;particleRenderer=new THREE.WebGLRenderer({antialias:true,alpha:true});particleRenderer.setSize(container.clientWidth,container.clientHeight);particleRenderer.setClearColor(0x000000,0);container.appendChild(particleRenderer.domElement);createParticles();window.addEventListener('resize',onParticleResize);animateParticles();container.style.pointerEvents='auto';container.addEventListener('mousemove',onParticleMouseMove);container.addEventListener('touchmove',onParticleTouchMove);window.addEventListener('scroll',onScroll);}
function createParticles(){const particleCount=200;const particlesGeometry=new THREE.BufferGeometry();const positions=new Float32Array(particleCount*3);const colors=new Float32Array(particleCount*3);const sizes=new Float32Array(particleCount);const palette=[new THREE.Color(0x4285f4),new THREE.Color(0x34a853),new THREE.Color(0xfbbc05),new THREE.Color(0xea4335)];for(let i=0;i<particleCount;i++){const radius=20+Math.random()*10;const theta=Math.random()*Math.PI*2;const phi=Math.random()*Math.PI;positions[i*3]=radius*Math.sin(phi)*Math.cos(theta);positions[i*3+1]=radius*Math.sin(phi)*Math.sin(theta);positions[i*3+2]=radius*Math.cos(phi);const color=palette[Math.floor(Math.random()*palette.length)];colors[i*3]=color.r;colors[i*3+1]=color.g;colors[i*3+2]=color.b;sizes[i]=0.5+Math.random()*1.5;}
particlesGeometry.setAttribute('position',new THREE.BufferAttribute(positions,3));particlesGeometry.setAttribute('color',new THREE.BufferAttribute(colors,3));particlesGeometry.setAttribute('size',new THREE.BufferAttribute(sizes,1));const particlesMaterial=new THREE.ShaderMaterial({uniforms:{time:{value:0.0},pointTexture:{value:new THREE.TextureLoader().load('https://threejs.org/examples/textures/sprites/disc.png')}},vertexShader:`attribute float size;varying vec3 vColor;uniform float time;void main(){vColor=color;vec3 pos=position;pos.x+=sin(pos.y*0.02+time)*2.0;pos.y+=cos(pos.x*0.02+time)*2.0;pos.z+=sin(pos.z*0.02+time)*2.0;vec4 mvPosition=modelViewMatrix*vec4(pos,1.0);gl_PointSize=size*(300.0/-mvPosition.z);gl_Position=projectionMatrix*mvPosition;}`,fragmentShader:`uniform sampler2D pointTexture;varying vec3 vColor;void main(){gl_FragColor=vec4(vColor,1.0);gl_FragColor=gl_FragColor*texture2D(pointTexture,gl_PointCoord);if(gl_FragColor.a<0.3)discard;}`,blending:THREE.AdditiveBlending,depthTest:false,transparent:true,vertexColors:true});particleSystem=new THREE.Points(particlesGeometry,particlesMaterial);particleScene.add(particleSystem);const pointLight=new THREE.PointLight(0x4285f4,0.8,50);pointLight.position.set(0,0,0);particleScene.add(pointLight);}
function animateParticles(){particleAnimationId=requestAnimationFrame(animateParticles);particleSystem.material.uniforms.time.value+=0.01;particleSystem.rotation.y+=0.002;particleSystem.rotation.x+=0.001;particleRenderer.render(particleScene,particleCamera);}
function onParticleResize(){const container=document.getElementById('particle-container');if(!container||!particleCamera||!particleRenderer)return;particleCamera.aspect=container.clientWidth/container.clientHeight;particleCamera.updateProjectionMatrix();particleRenderer.setSize(container.clientWidth,container.clientHeight);}
function onParticleMouseMove(event){if(!particleSystem)return;const rect=event.target.getBoundingClientRect();const x=((event.clientX-rect.left)/rect.width)*2-1;const y=-((event.clientY-rect.top)/rect.height)*2+1;gsap.to(particleSystem.rotation,{x:y*0.2,y:x*0.2,duration:2,ease:"power2.out"});}
function onParticleTouchMove(event){if(!particleSystem||!event.touches[0])return;const rect=event.target.getBoundingClientRect();const x=((event.touches[0].clientX-rect.left)/rect.width)*2-1;const y=-((event.touches[0].clientY-rect.top)/rect.height)*2+1;gsap.to(particleSystem.rotation,{x:y*0.2,y:x*0.2,duration:2,ease:"power2.out"});}
function onScroll(){const guaranteeSection=document.querySelector('#roi-guarantee');if(!guaranteeSection||!particleCamera)return;const rect=guaranteeSection.getBoundingClientRect();const isVisible=rect.top<window.innerHeight&&rect.bottom>0;if(isVisible){const percentScrolled=1-(rect.bottom/(window.innerHeight+rect.height));gsap.to(particleCamera.position,{z:30-percentScrolled*5,duration:0.5});}}
function stopParticleAnimation(){if(particleAnimationId){cancelAnimationFrame(particleAnimationId);}}
document.addEventListener('DOMContentLoaded',function(){if(typeof THREE==='undefined'){const scripts=document.querySelectorAll('script');let threeJsLoaded=false;scripts.forEach(script=>{if(script.src.includes('three.min.js')||script.src.includes('three.js')){threeJsLoaded=true;}});if(!threeJsLoaded){loadScripts(['https://cdnjs.cloudflare.com/ajax/libs/three.js/r128/three.min.js','https://cdnjs.cloudflare.com/ajax/libs/gsap/3.9.1/gsap.min.js'],initParticleSystem);}else{initParticleSystem();}}else{initParticleSystem();}});function loadScripts(urls,callback){let loadedCount=0;urls.forEach(url=>{const script=document.createElement('script');script.onload=function(){loadedCount++;if(loadedCount===urls.length){callback();}};script.src=url;document.head.appendChild(script);});}