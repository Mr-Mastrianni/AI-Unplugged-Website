document.addEventListener('DOMContentLoaded',function(){applyTerminalStyling();});function applyTerminalStyling(){document.querySelectorAll('[data-terminal-header]').forEach(element=>{const title=element.getAttribute('data-terminal-header');if(!title)return;element.innerHTML=createTerminalHeader(title);});document.querySelectorAll('[data-terminal-window]').forEach(element=>{const title=element.getAttribute('data-terminal-window');const content=element.innerHTML;const theme=element.getAttribute('data-theme')||'matrix';const animate=element.getAttribute('data-animate')!=='false';element.innerHTML=createTerminalWindow(title,content,theme,animate);});document.querySelectorAll('[data-matrix-bg]').forEach(element=>{if(!element.querySelector('.matrix-bg')){const canvas=document.createElement('canvas');canvas.classList.add('matrix-bg');element.prepend(canvas);}});}
function createTerminalHeader(title){return`<div class="section-terminal-header"><div class="terminal-buttons"><div class="terminal-button red"></div><div class="terminal-button yellow"></div><div class="terminal-button green"></div></div><div class="section-terminal-title">${title}</div><div class="terminal-buttons opacity-0"><div class="terminal-button"></div></div></div>`;}
function createTerminalWindow(title,content,theme='matrix',animate=true){const id='terminal-'+Math.random().toString(36).substr(2,9);let themeColors={matrix:{text:'var(--terminal-green)',border:'var(--terminal-green)'},cyberpunk:{text:'var(--terminal-cyan)',border:'var(--terminal-purple)'},hacker:{text:'var(--terminal-red)',border:'var(--terminal-red)'},retro:{text:'#ffbf00',border:'#ffbf00'}};const colors=themeColors[theme]||themeColors.matrix;const html=`<div class="section-terminal"style="border-color: ${colors.border}"><div class="section-terminal-header"><div class="terminal-buttons"><div class="terminal-button red"></div><div class="terminal-button yellow"></div><div class="terminal-button green"></div></div><div class="section-terminal-title"style="color: ${colors.text}">${title}</div><div class="terminal-buttons opacity-0"><div class="terminal-button"></div></div></div><div id="${id}"class="p-8 terminal-content">${content}</div></div>`;if(animate){setTimeout(()=>{const terminalContent=document.getElementById(id);if(terminalContent){const originalContent=terminalContent.innerHTML;simulateTyping(terminalContent,originalContent);}},500);}
return html;}
function createCommandLine(placeholder='Type a command...',onCommand=null){const id='cmd-'+Math.random().toString(36).substr(2,9);const html=`<div class="terminal-cmd-line"><span class="text-terminal-green mr-2">$</span><input id="${id}"type="text"placeholder="${placeholder}"
class="bg-transparent border-none focus:outline-none text-terminal-green w-full"></div>`;setTimeout(()=>{const input=document.getElementById(id);if(input){input.addEventListener('keydown',function(e){if(e.key==='Enter'){const cmd=input.value.trim();input.value='';if(onCommand&&typeof onCommand==='function'){onCommand(cmd);}}});}},100);return html;}
function simulateTyping(element,text,speed=30){if(!element)return;const originalHTML=text;element.innerHTML='';const tempDiv=document.createElement('div');tempDiv.innerHTML=originalHTML;function typeElement(parentElement,element,callback){const nodes=Array.from(element.childNodes);let currentIndex=0;function processNextNode(){if(currentIndex>=nodes.length){if(callback)callback();return;}
const node=nodes[currentIndex++];if(node.nodeType===Node.TEXT_NODE){const text=node.textContent;let charIndex=0;const textNode=document.createTextNode('');parentElement.appendChild(textNode);function typeNextChar(){if(charIndex<text.length){textNode.textContent+=text[charIndex++];setTimeout(typeNextChar,speed);}else{setTimeout(processNextNode,speed);}}
typeNextChar();}else if(node.nodeType===Node.ELEMENT_NODE){const newElement=document.createElement(node.tagName);Array.from(node.attributes).forEach(attr=>{newElement.setAttribute(attr.name,attr.value);});parentElement.appendChild(newElement);typeElement(newElement,node,processNextNode);}else{parentElement.appendChild(node.cloneNode(true));setTimeout(processNextNode,speed);}}
processNextNode();}
typeElement(element,tempDiv,function(){const cursor=document.createElement('span');cursor.className='cursor';cursor.style.display='inline-block';cursor.style.width='8px';cursor.style.height='15px';cursor.style.backgroundColor='var(--terminal-green)';cursor.style.animation='blink 1s infinite';element.appendChild(cursor);});}
function addMatrixBackground(targetSelector){const container=document.querySelector(targetSelector);if(!container)return;const canvas=document.createElement('canvas');canvas.classList.add('matrix-bg');container.prepend(canvas);initMatrixCanvas(canvas);}
function initMatrixCanvas(canvas){const ctx=canvas.getContext('2d');const parent=canvas.parentElement;canvas.width=parent.offsetWidth;canvas.height=parent.offsetHeight;const chars='アァカサタナハマヤャラワガザダバパイィキシチニヒミリヰギジヂビピウゥクスツヌフムユュルグズブヅプエェケセテネヘメレヱゲゼデベペオォコソトノホモヨョロヲゴゾドボポヴッン0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz';const fontSize=14;const columns=Math.floor(canvas.width/fontSize);const drops=[];for(let i=0;i<columns;i++){drops[i]=Math.floor(Math.random()*-canvas.height);}
function draw(){ctx.fillStyle='rgba(10, 10, 18, 0.05)';ctx.fillRect(0,0,canvas.width,canvas.height);ctx.fillStyle='#0f0';ctx.font=fontSize+'px monospace';for(let i=0;i<drops.length;i++){const text=chars[Math.floor(Math.random()*chars.length)];ctx.fillText(text,i*fontSize,drops[i]*fontSize);if(drops[i]*fontSize>canvas.height&&Math.random()>0.98){drops[i]=0;}
drops[i]++;}}
const intervalId=setInterval(draw,33);const resizeObserver=new ResizeObserver(entries=>{for(let entry of entries){if(entry.target===parent){canvas.width=parent.offsetWidth;canvas.height=parent.offsetHeight;}}});resizeObserver.observe(parent);}